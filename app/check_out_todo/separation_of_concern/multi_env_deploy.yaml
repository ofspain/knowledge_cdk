# .github/workflows/deploy.yml
name: Multi-Env Deploy to ECS

on:
  push:
    branches:
      - develop
      - staging
      - main
    paths:
      - 'src/**'
      - '.github/workflows/deploy.yml'

env:
  AWS_REGION: us-east-1

jobs:
  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.ref_name }}  # <-- dynamically uses branch name as environment name
      url: https://your-app-url.com

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_DEPLOY_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, Tag, and Push Docker image to ECR
        run: |
          IMAGE_TAG=${{ github.sha }}
          ECR_REGISTRY=${{ secrets.ECR_REGISTRY }}
          ECR_REPOSITORY=${{ secrets.ECR_REPOSITORY }}

          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Update ECS Service
        run: |
          CLUSTER_NAME=${{ secrets.CLUSTER_NAME }}
          SERVICE_NAME=${{ secrets.SERVICE_NAME }}
          ECR_REGISTRY=${{ secrets.ECR_REGISTRY }}
          ECR_REPOSITORY=${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG=${{ github.sha }}

          aws ecs update-service \
            --cluster $CLUSTER_NAME \
            --service $SERVICE_NAME \
            --force-new-deployment

      - name: Notify Success
        if: success()
        run: echo "Deployment to ${{ github.environment.name }} completed successfully ðŸŽ‰"
